{"version":3,"file":"static/css/main.a992b6e3.css","mappings":"AAGA;AEAA;AEAA;ACCA;ACFA;ACAA;ACAA;ACAA;ACAA;;ACAA;ACAA;ACAA;ACAA;;ACAA","sources":["webpack://swiftlyui/./src/components/Cards/Card/Card.scss","webpack://swiftlyui/./src/styles/_breakpoints.scss","webpack://swiftlyui/./src/components/Cards/IconCard/IconCard.scss","webpack://swiftlyui/./src/styles/_colors.scss","webpack://swiftlyui/./src/components/Cards/CardGroup/CardGroup.scss","webpack://swiftlyui/./src/components/Cards/QuoteCard/QuoteCard.scss","webpack://swiftlyui/./src/components/Cards/ImageCard/ImageCard.scss","webpack://swiftlyui/./src/components/Containers/Slider/Slider.scss","webpack://swiftlyui/./src/components/Forms/Button/Button.scss","webpack://swiftlyui/./src/components/Forms/CheckBox/CheckBox.scss","webpack://swiftlyui/./src/components/Forms/RadioButton/RadioButton.scss","webpack://swiftlyui/./src/components/Forms/Label/Label.scss","webpack://swiftlyui/./src/components/Forms/TextInput/TextInput.scss","webpack://swiftlyui/./src/components/Loaders/ProgressBar/ProgressBar.scss","webpack://swiftlyui/./src/components/Loaders/Spinner/Spinner.scss","webpack://swiftlyui/./src/components/Nav/NavBar/NavBar.scss"],"sourcesContent":["@import '../../../styles/colors';\n@import '../../../styles/breakpoints';\n\n.Card {\n  position: relative;\n  display: block;\n  box-sizing: border-box;\n  background-color: white;\n  border: 2px solid $disabledColor;\n  border-radius: 4px;\n  padding: 0;\n  text-align: left !important;\n  overflow: visible;\n  padding: 20px;\n  transition: .25s;\n  color: black;\n  text-decoration: none;\n\n  @include respond(500px) {\n    width: 100% !important;\n  }\n\n  &.canInteract{\n    &:hover,\n    &:active {\n      box-shadow: 0 0 18px 0px rgba(35, 67, 144, 0.2);\n      cursor: pointer;\n    }\n  }\n}","// Breakpoints are desktop-first\n// These match the breakpoints in useWindowSize\n// lg = Container grid width\n$screenSizeMax: (\n  xs: 414px,\n  sm: 767px,\n  md: 1024px,\n  lg: 1200px,\n  xl: 1366px,\n);\n\n/*\nThe respond mixin is used to handle media queries for screen size\nbased on the above breakpoints. The most common use will be\nrespond(\"sm\") for phone devices and respond(\"md\") for tablets.\n*/\n@mixin respond($breakpoint) {\n  @if map-has-key($screenSizeMax, $breakpoint) {\n    @media (max-width: map-get($screenSizeMax, $breakpoint)) {\n      @content;\n    }\n  }\n\n  @else {\n    @media (max-width: $breakpoint) {\n      @content;\n    }\n  }\n}","@import '../../../styles/colors';\n\n.IconCard {\n  .IconCardIcon {\n    color: $PrimaryColor;\n    font-size: 1.6em;\n  }\n}\n\n.IconCardHeader {\n  font-size: 1.3em;\n  margin-top: 16px;\n  margin-bottom: 12px;\n}\n\n.IconCardContent {\n  line-height: 1.4;\n}","\n// Primary Colors\n$PrimaryColor: #3f51b5;\n$PrimaryColorHover: #303f9f;\n$PrimaryColorBackgroundHover: #dbdffa;\n$secondaryColor: #b53fb5;\n\n// Neutral Colors\n$white: white;\n$black: black;\n$gray: #9e9e9e;\n$hoverGray: #f1f1f1;\n$darkgray: #4e4e4e;\n\n// Disabled colors\n$disabledColor: #d6d6d6;\n$disabledText: white;\n$disabledTextGray: #9e9e9e;\n\n// Dark Theme\n$SliderDarkBackground: #424242;\n\n// Animation Durations\n$cardHoverAnimationDuration: .25;\n","@import '../../../styles/colors';\n@import '../../../styles/breakpoints';\n\n.CardGroup {\n  overflow: visible;\n  margin: 0 auto;\n  padding: 30px 0;\n}\n\n.CardGroupHeader {\n  font-weight: 600;\n  font-size: 28px;\n  margin: 1em 0;\n\n  // Override inline styles for mobile\n  @include respond('sm') {\n    text-align: center !important;\n  }\n}\n\n.CardGroupText {\n  font-weight: normal;\n  font-size: 18px;\n  margin: -1em 0 2em 0;\n\n  // Override inline styles for mobile\n  @include respond('sm') {\n    text-align: center !important;\n  }\n}\n\n.CardGroupContentWrap {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}","@import '../../../styles/colors';\n@import '../../../styles/breakpoints';\n\n.QuoteCard {\n  blockquote {\n    line-height: 1.4285em;\n    color: #697891;\n    font-size: 1rem;\n    font-style: oblique;\n    margin: 1em 0;\n  }\n}\n\n.QuoteCardLink {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  text-decoration: none !important;\n  color: #0f172a;\n}\n\n.QuoteCardProfile {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 4px 0 1px 0;\n\n  .QuoteCardProfilePic {\n    width: 3.125rem;\n    height: 3.125rem;\n    border-radius: 50%;\n    margin-right: 1rem;\n    object-fit: cover;\n  }\n\n  .QuoteCardText {\n    height: auto;\n    color: $PrimaryColor;\n    margin: 0 0 0.3125em 0;\n    line-height: 1.4em;\n    margin-bottom: 0.5em;\n    font-family: 'Muli', sans-serif;\n    font-weight: 400;\n    font-size: 1rem;\n    text-transform: uppercase;\n  }\n}\n","@import '../../../styles/colors';\n\n.ImageCardImage {\n  width: 100%;\n  object-fit: cover;\n}\n\n.ImageCardContentContainer {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n.ImageCardContent {\n  margin-top: 4px;\n}\n.ImageCardDivider {\n  margin-left: 8px;\n  margin-right: 8px;\n  margin-bottom: 0;\n  margin-top: 8px;\n  height: 1px;\n  background-color: $disabledColor;\n  border: none;\n}\n\n.ImageCardCaption{\n  padding-top: 8px;\n  padding-left: 8px;\n  padding-right: 8px;\n  font-size: small;\n  color: $darkgray;\n}\n\n.ImageCardContentLink {\n  color: $PrimaryColor;\n  display: flex;\n  flex-direction: row;\n  align-items: center; \n  justify-content: flex-end;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  text-decoration: none;\n  svg {\n    margin-left: 2px;\n    transform: translateY(3px);\n  }\n}\n\n.ImageCardRightContainer{\n  padding: 8px;\n  transition: .25s;\n  border-radius: 4px;\n  cursor: pointer;\n  &:active{\n    background-color: $PrimaryColorBackgroundHover;\n  }\n}","@import '../../../styles/_colors.scss';\n\n.Slider {\n  overflow-y: scroll;\n}\n\n.SliderContainer {\n  overflow-y: scroll;\n  position: fixed;\n  top: 0;\n  background-color: white;\n  color: black;\n  height: 100%;\n  z-index: 99;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n  &.right {\n    right: 0;\n    transform: translateX(110%);\n    &.isOpen {\n        transform: translateX(0);\n      }\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-110%);\n    &.isOpen {\n        transform: translateX(0);\n      }\n  }\n}\n\n.SliderCloseElement {\n  top: 0;\n  position: absolute;\n  margin: 20px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  right: 0;\n  height: 30px;\n  width: 30px;\n  border-radius: 4px;\n  transition: .25s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n\n  &:hover {\n    background-color: $hoverGray;\n  }\n}\n\n.SliderBackdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  opacity: 0;\n  z-index: 98;\n  transition: 0.25s;\n  pointer-events: none;\n  pointer-events: none;\n\n  &.isOpen {\n    opacity: 1;\n    z-index: 98;\n    pointer-events: all;\n  }\n}\n\n.SliderClickableBackdrop {\n  height: 100%;\n  width: 100%;\n  z-index: 99;\n  pointer-events: none;\n\n  &.isOpen {\n    pointer-events: all;\n  }\n}\n","@import '../../../styles/_colors.scss';\n\n.Button {\n  background-color: $PrimaryColor;\n  color: $white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: $PrimaryColorHover;\n  }\n\n  &.small {\n    font-size: 12px;\n    padding: 10px 15px;\n  }\n\n  &.medium {\n    font-size: 14px;\n    padding: 10px 20px;\n  }\n\n  &.large {\n    font-size: 18px;\n    padding: 15px 30px;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &.disabled {\n    background-color: $disabledColor;\n    color: $disabledText;\n    cursor: not-allowed;\n  }\n}","@import '../../../styles/colors';\n\n.CheckBox {\n  display: inline-flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  &:hover {\n    &:not(.isDisabled) {\n      .CheckBoxInputContainer {\n        box-shadow: 0 0 3px 0 $PrimaryColor;\n      }\n      .default-icon {\n        box-shadow: 0 0 1px 0 $PrimaryColor;\n      }\n    }\n  }\n\n  &.default-icon {\n    background-color: $PrimaryColor;\n    border-radius: 3px;\n    padding: 5px;\n    transition: box-shadow $cardHoverAnimationDuration+s ease-in-out;\n  }\n}\n\n.CheckBoxInputContainer {\n  border-color: $PrimaryColor;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: box-shadow $cardHoverAnimationDuration+s ease-in-out;\n\n  &.isDisabled {\n    border-color: $disabledColor;\n  }\n}\n\n.CheckBoxLabel {\n  margin: 4px;\n  &.isDisabled {\n    color: $disabledTextGray;\n  }\n}\n\n.CheckBoxInputIcon {\n  display: flex;\n  opacity: 0;\n  transform: scale(0);\n  transition: .25s;\n  &.isDisabled {\n    .default-icon {\n      background-color: $disabledColor;\n    }\n  }\n  &.shouldRender {\n    transform: scale(1);\n    opacity: 1;\n  }\n}","@import '../../../styles/colors';\n\n.RadioButton {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: baseline;\n  font-size: 16px;\n  line-height: 1.5em;\n\n  cursor: pointer;\n  margin-right: 8px;\n\n  &.disabled {\n    color: $disabledTextGray;\n    cursor: default;\n  }\n}\n\n.RadioButtonInput {\n  display: none;\n  outline-offset: 10px;\n  transition: outline-offset $cardHoverAnimationDuration+s;\n\n  &:checked+.RadioButtonCustom {\n    outline-color: white;\n    outline-offset: -4px;\n    outline-width: 2px;\n    background-color: $PrimaryColor;\n    transition: background-color $cardHoverAnimationDuration ease-out;\n    transition: outline $cardHoverAnimationDuration ease-out;\n    transition: outline-offset $cardHoverAnimationDuration+s;\n  }\n\n  &:disabled {\n    &:checked+.RadioButtonCustom {\n      background-color: $disabledTextGray;\n    }\n\n    &:not(:checked)+.RadioButtonCustom {\n      border-color: $disabledTextGray;\n      outline-color: $disabledTextGray;\n\n      &:hover {\n        box-shadow: none;\n      }\n    }\n  }\n}\n\n.RadioButtonCustom {\n  position: relative;\n  top: 3px;\n  width: 18px;\n  height: 18px;\n  min-width: 18px;\n  margin-right: 8px;\n  background-color: white;\n  border-radius: 50%;\n  outline-offset: -2px;\n  outline: 2px solid $PrimaryColor;\n  box-shadow: 0px 0px 4px transparent;\n  transition: background $cardHoverAnimationDuration ease-in;\n  transition: box-shadow $cardHoverAnimationDuration ease-in;\n  box-sizing: border-box;\n\n  &:after {\n    display: block;\n    position: absolute;\n    content: '';\n    top: 3px;\n    left: 3px;\n    height: 7px;\n    width: 10px;\n    transition: transform $cardHoverAnimationDuration ease-in;\n    box-sizing: border-box;\n  }\n\n  &:hover {\n    box-shadow: 0 0 4px 2px $PrimaryColorHover;\n  }\n}\n\n.RadioButtonDisplayLabel {\n  flex-grow: 1;\n}\n\n.RadioButtonSetOptionsContainer {\n  &.isInline {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n\n    .withHelp {\n      margin-right: 16px;\n    }\n\n    .RadioButtonSetLabel {\n      width: 100%;\n    }\n  }\n}\n\n.RadioButtonSetItem {\n  padding: 10px;\n  box-sizing: border-box;\n\n  &.withHelp {\n    max-width: 375px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3);\n    border: solid 2px #fff;\n    margin: 8px 0;\n    cursor: pointer;\n    position: relative;\n    transition: all 0.2s ease-in-out;\n\n    &.disabled {\n      cursor: default;\n    }\n\n    &:hover:not(.disabled),\n    &.checked:not(.disabled) {\n      box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.5);\n      border-color: $PrimaryColor;\n      color: $PrimaryColor;\n    }\n\n    .RadioButtonDisplayLabel {\n      display: flex;\n      margin-left: 8px;\n    }\n  }\n}\n\n\n.RadioButtonSetLabelText {\n  &.hasHelp {\n    margin-right: 25px;\n  }\n}\n\n.RadioButtonSetTooltip {\n  position: absolute;\n  margin: 10px;\n  top: 0;\n  right: 0;\n}\n\n.RadioButtonSetRadioButtonLabel {\n  width: 75%;\n}","@import '../../../styles/_colors.scss';\n\n.Label {\n  font-size: 14px;\n  font-weight: 500;\n  text-align: left;\n  display: block;\n  padding: 0;\n  border: none;\n  margin-bottom: 4px;\n  font-family: 'Roboto', sans-serif;\n\n  &.disabled {\n    color: $disabledTextGray;\n  }\n}\n\n.LabelText {\n  padding-right: 8px;\n}\n\n","@import '../../../styles/_colors.scss';\n\n.TextInput {\n  background-color: transparent;\n  border: none;\n  color: $black;\n  font-size: 16px;\n  width: 95%;\n  transition: .25s;\n  &:focus {\n    outline: none;\n  }\n}\n\n.TextInputContainer{\n  width: 100%;\n  border: 1px solid $PrimaryColor;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n\n  &.TextInput:disabled {\n    color: $disabledTextGray;\n    border-color: $disabledTextGray;\n  }\n\n  &:not(:disabled):hover {\n    border-color: $PrimaryColorHover;\n  }\n}\n\ntextarea {\n  resize: vertical;\n}","@import '../../../styles/_colors.scss';\n\n.ProgressBar {\n  width: 100%;\n  background-color: $gray;\n  border-radius: 2px;\n}\n\n.ProgressBarFill {\n  background-color: $PrimaryColor;\n  height: 100%;\n  transition: all 0.4s;\n  border-radius: 2px;\n}","@import '../../../styles/colors';\n\n.Spinner {\n  display: flex;\n  justify-content: center;\n  &.small {\n    height: 50px;\n  }\n\n  &.medium {\n    height: 100px\n  }\n\n  &.large {\n    height: 150px\n  }\n}\n\n.SpinnerSVG {\n  width: 50%;\n  max-width: 10rem;\n  animation: rotate 3.6s linear infinite;\n}\n\n.SpinnerCircle {\n  fill: none;\n  stroke: $PrimaryColor;\n  stroke-width: 8px;\n  stroke-dasharray: 300;\n  animation: outline 2s cubic-bezier(0.77, 0, 0.18, 1) infinite;\n}\n\n@keyframes outline {\n  0% {\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dashoffset: 300;\n  }\n\n  100% {\n    stroke-dashoffset: 600;\n  }\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0turn);\n  }\n\n  to {\n    transform: rotate(-1turn);\n  }\n}","@import '../../../styles/colors';\n\n.NavBar {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background-color: $PrimaryColor;\n  align-items: center;\n  padding: 0 20px;\n  height: 60px;\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 99;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  &.sticky {\n    position: fixed;\n    z-index: 99;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\n  }\n}"],"names":[],"sourceRoot":""}